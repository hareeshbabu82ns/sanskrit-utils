apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: "{{app_name}}"
  name: "{{app_name}}"
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: "{{app_name}}"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "{{app_name}}"
    spec:
      containers:
      - image: "{{docker_fdqn}}/home/{{app_name}}:{{git_tag | default('latest')}}"
        imagePullPolicy: Always
        name: "{{app_name}}"
        env:
        - name: PY_ENV
          value: "prod"
        - name: MONGO_DB_HOST
          value: "{{db_host}}"
        - name: MONGO_DB_PORT
          value: "{{db_port}}"
        - name: MONGO_DB_DB
          value: "{{db_database}}"
        - name: MONGO_DB_USER
          value: "{{db_user}}"
        - name: MONGO_DB_PASSWORD
          value: "{{db_password}}"        
        ports:
        - containerPort: {{app_port}}
          protocol: TCP
      restartPolicy: Always
      dnsPolicy: "None"
      dnsConfig:
        nameservers:
          - 192.168.86.199
          - 10.43.0.10
        searches:
          - default.svc.cluster.local
          - svc.cluster.local
          - cluster.local
        options:
          - name: ndots
            value: "5"
---
apiVersion: v1
kind: Service
metadata:
  name: "{{app_name}}"
  namespace: default
spec:
  selector:
    app: "{{app_name}}" # pod label
  ports:
  - protocol: TCP
    port: 80 # port to be exposed on service
    targetPort: {{app_port}} #port on the pod
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "{{app_name}}"
  annotations:
spec:
  ingressClassName: nginx
  rules:
  - host: "{{app_fqdn}}"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: "{{app_name}}"
            port:
              number: 80 # port of the service
# curl -H "Host: "{{app_name}}".kube.local.io" http://192.168.86.151              